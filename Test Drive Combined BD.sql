
DECLARE @date_from DATETIME
DECLARE @date_to DATETIME

/* DEFAULT VALUES */
/* Going back 6 months */
SET @date_from = CAST(DATEADD(month,-48,GETDATE()) AS DATE)
/* Current Date */
SET @date_to = CAST(GETDATE() AS DATE)

/* SPECIFIC DATE RANGE (Uncomment below to use date range) */
/*
SET @date_from = CONVERT(DATE,'01/01/2014',103)
SET @date_to = CONVERT(DATE,'31/12/2014',103)
*/

SELECT OUTER_QUERY.* FROM
(
/*THIS TOP SECTION RETRIEVES RECENT NON ESSENTIALS TRIALS*/
SELECT 
A.TEST_DRIVE_SERIAL
,A.TEST_DRIVE_PRODUCT
,A.TEST_DRIVE_REG_DT
,A.PAID_SERIAL
,A.PAID_PRODLN
,A.PAID_REG_DT
,A.ACC_INDUSTRY_TYPE
,A.ACC_INDUSTRY_SUB_TYPE
,A.X_LEGAL_ENTITY
,ACCOUNT.X_CUSTOMER_ID  AS ACC_CLIENT_ID
,ACCOUNT.NAME AS ACC_NAME
,A.DATA_GROUPING AS SCENARIO
,A.TEST_DRIVE_ORDER_NUM AS ORIGINAL_ORDER_NUM
,NULL AS ORIGINAL_SALES_TEAM
,NULL AS ORIGINAL_BUNDLE_NAME
,A.CONVERSION_ORDER_NUM
,NULL AS BUY_FROM_TRIAL_SALES_SALE_TEAM
,NULL AS BUY_FROM_TRIAL_BUNDLE_BUNDLE_NAME
,A.CONVERSION_DT
,DATEDIFF(day, A.TEST_DRIVE_REG_DT, A.CONVERSION_DT) AS  CONVERSION_DURATION
,A.CONVERTED
,NULL AS CONVERT_CATEGORY
,NULL AS ACCOUNT_MAIN_EMAIL
,A.CONVERSION_ORDER_ITEM_ID
,A.SALES_MONITOR_ITEM_ID
,A.CONVERSION_ORDER_FOUND_METHOD
,A.STUDENT
,A.PRODUCT_LINE_GROUP
,A.PAID_ASSET_ROW_ID
,A.ACCOUNT_ID
,A.CONVERSION_ORDER_ID
FROM WC_TEST_DRIVE_CURRENT_YEAR_F A
LEFT OUTER JOIN W_ORG_D ACCOUNT ON ACCOUNT.INTEGRATION_ID = A.ACCOUNT_ID
WHERE A.TEST_DRIVE_REG_DT >= @date_from AND 
A.TEST_DRIVE_REG_DT <= @date_to
UNION
/*THIS TOP SECTION RETRIEVES NON RECENT NON ESSENTIALS TRIALS*/
SELECT 
A.TEST_DRIVE_SERIAL
,A.TEST_DRIVE_PRODUCT
,A.TEST_DRIVE_REG_DT
,A.PAID_SERIAL
,A.PAID_PRODLN
,A.PAID_REG_DT
,A.ACC_INDUSTRY_TYPE
,A.ACC_INDUSTRY_SUB_TYPE
,A.X_LEGAL_ENTITY
,ACCOUNT.X_CUSTOMER_ID  AS ACC_CLIENT_ID
,ACCOUNT.NAME AS ACC_NAME
,A.DATA_GROUPING AS SCENARIO
,A.TEST_DRIVE_ORDER_NUM AS ORIGINAL_ORDER_NUM
,NULL AS ORIGINAL_SALES_TEAM
,NULL AS ORIGINAL_BUNDLE_NAME
,A.CONVERSION_ORDER_NUM
,NULL AS BUY_FROM_TRIAL_SALES_SALE_TEAM
,NULL AS BUY_FROM_TRIAL_BUNDLE_BUNDLE_NAME
,A.CONVERSION_DT
,DATEDIFF(day, A.TEST_DRIVE_REG_DT, A.CONVERSION_DT) AS  CONVERSION_DURATION
,A.CONVERTED
,NULL AS CONVERT_CATEGORY
,NULL AS ACCOUNT_MAIN_EMAIL
,A.CONVERSION_ORDER_ITEM_ID
,A.SALES_MONITOR_ITEM_ID
,A.CONVERSION_ORDER_FOUND_METHOD
,A.STUDENT
,A.PRODUCT_LINE_GROUP
,A.PAID_ASSET_ROW_ID
,A.ACCOUNT_ID
,A.CONVERSION_ORDER_ID
FROM WC_TEST_DRIVE_ALL_F A
LEFT OUTER JOIN W_ORG_D ACCOUNT ON ACCOUNT.INTEGRATION_ID = A.ACCOUNT_ID
WHERE A.TEST_DRIVE_REG_DT >= @date_from AND 
A.TEST_DRIVE_REG_DT <= @date_to
UNION
/*THIS TOP SECTION RETRIEVES ESSENTIALS TRIALS*/
SELECT 
ESSENTIALS_QUERY.AST_SERIAL_NUM AS  TEST_DRIVE_SERIAL
,ESSENTIALS_QUERY.PROD_NAME AS TEST_DRIVE_PRODUCT
,ESSENTIALS_QUERY.AST_REGISTERED_DT AS TEST_DRIVE_REG_DT
,CASE WHEN ESSENTIALS_QUERY.SCENARIO  = 'Buy From Trial' THEN ESSENTIALS_QUERY.AST_SERIAL_NUM ELSE NULL END AS PAID_SERIAL
,CASE WHEN ESSENTIALS_QUERY.CONVERT_FLAG = 'Y' THEN 'LiveAccounts' ELSE NULL END AS PAID_PRODLN
,CASE WHEN ESSENTIALS_QUERY.SCENARIO  = 'Buy From Trial' THEN ESSENTIALS_QUERY.AST_REGISTERED_DT ELSE NULL END AS PAID_REG_DT
,ESSENTIALS_QUERY.ACC_INDUSTRY_TYPE
,ESSENTIALS_QUERY.ACC_INDUSTRY_SUB_TYPE
,ESSENTIALS_QUERY.ACC_LEGAL_NAME AS   X_LEGAL_ENTITY
,ESSENTIALS_QUERY.ACC_INTEGRATION_ID AS ACC_CLIENT_ID
,ESSENTIALS_QUERY.ACC_NAME
,ESSENTIALS_QUERY.SCENARIO
,ESSENTIALS_QUERY.ORIGINAL_ORDER_NUM
,ESSENTIALS_QUERY.ORIGINAL_SALES_TEAM 
,ESSENTIALS_QUERY.ORIGINAL_BUNDLE_NAME
,ESSENTIALS_QUERY.BUY_FROM_TRIAL_ORDER_NUM AS CONVERSION_ORDER_NUM
,ESSENTIALS_QUERY.BUY_FROM_TRIAL_SALES_SALE_TEAM
,ESSENTIALS_QUERY.BUY_FROM_TRIAL_BUNDLE_BUNDLE_NAME
,ESSENTIALS_QUERY.CONVERSION_ORDER_DT
,ESSENTIALS_QUERY.CONVERSION_DURATION
,ESSENTIALS_QUERY.CONVERT_FLAG
,ESSENTIALS_QUERY.CONVERT_CATEGORY
,ESSENTIALS_QUERY.ACCOUNT_MAIN_EMAIL
,NULL AS CONVERSION_ORDER_ITEM_ID
,NULL AS SALES_MONITOR_ITEM_ID
,NULL AS CONVERSION_ORDER_FOUND_METHOD
,NULL AS STUDENT
,'ESSENTIALS' AS PRODUCT_LINE_GROUP
,NULL AS PAID_ASSET_ROW_ID
,ESSENTIALS_QUERY.ACCOUNT_ID AS ACCOUNT_ID
,ESSENTIALS_QUERY.CONVERSION_ORDER_ID AS CONVERSION_ORDER_ID
FROM
(
SELECT
    C.*,
       ACC.INTEGRATION_ID AS ACCOUNT_ID
       ,ORDER1.INTEGRATION_ID AS CONVERSION_ORDER_ID
FROM
    (
        SELECT
                ROW_NUMBER () OVER (PARTITION BY ETF.ACC_INTEGRATION_ID ORDER BY ETF.ACC_INTEGRATION_ID) AS ROW_NUM
                ,ETF.AST_REGISTERED_DT
                ,ETF.AST_SERIAL_NUM
                ,ETF.PROD_NAME
                ,ETF.ACC_LEGAL_NAME
                ,ETF.ACC_INTEGRATION_ID
                ,ETF.ACC_NAME
                ,ETF.ACC_INDUSTRY_TYPE
                ,ETF.ACC_INDUSTRY_SUB_TYPE
               ,(CASE
                    WHEN ETF.TRIAL_ASSET_ID IS NOT NULL THEN
                                    CASE WHEN ETF.TRIAL_DATE_EFF_END_DT < GETDATE() THEN 'Expired Trial' ELSE 'Trial' END
                                WHEN ETF.BUY_FROM_TRIAL_ASSET_ID IS NOT NULL THEN 'Buy From Trial'
                                WHEN ETF.DIRECT_SALES_ASSET_ID IS NOT NULL THEN 'Direct Sales'
                                ELSE NULL
                  END) SCENARIO
                 ,ETF.ORIGINAL_ORDER_NUM
                 ,ETF.ORIGINAL_SALES_TEAM ORIGINAL_SALES_TEAM
                 ,ETF.ORIGINAL_BUNDLE_NAME
                 ,ETF.BUY_FROM_TRIAL_ORDER_NUM
                 ,ETF.BUY_FROM_TRIAL_SALES_SALE_TEAM
                 ,ETF.BUY_FROM_TRIAL_BUNDLE_BUNDLE_NAME 
                 ,dbo.fn_UTCtoLocalTime(ETF.BUY_FROM_TRIAL_ORDER_DT,'1-14J-0') CONVERSION_ORDER_DT
                 ,DATEDIFF(DAY,ETF.ORIGINAL_ORDER_ORDER_DT,ETF.BUY_FROM_TRIAL_ORDER_DT) CONVERSION_DURATION
                 ,(CASE WHEN ETF.BUY_FROM_TRIAL_ASSET_ID IS NOT NULL THEN 'Y' ELSE 'N' END) CONVERT_FLAG
                ,(CASE WHEN ETF.BUY_FROM_TRIAL_ASSET_ID IS NOT NULL
                    THEN CASE WHEN DATEDIFF(DAY,ETF.ORIGINAL_ORDER_ORDER_DT,ETF.BUY_FROM_TRIAL_ORDER_DT) <= 31 THEN 'Converted within Trial' ELSE 'Late Conversion' END
                    ELSE NULL 
                  END) CONVERT_CATEGORY
                                                /* ACCOUNT MAIL EMAIL */ 
                        , ACC.X_MAIN_EMAIL AS ACCOUNT_MAIN_EMAIL
        FROM
                WC_ESSENTIAL_TRIAL_F ETF
            INNER JOIN 
            (
                                        SELECT DISTINCT ETF.ACC_INTEGRATION_ID
                FROM WC_ESSENTIAL_TRIAL_F ETF
                WHERE
                                                                    (CASE WHEN ETF.BUY_FROM_TRIAL_ASSET_ID IS NOT NULL THEN 'Y' ELSE 'N' END) = 'Y'
                                                                                AND ETF.AST_REGISTERED_DT BETWEEN @date_from AND @date_to
                UNION
                SELECT DISTINCT ETF.ACC_INTEGRATION_ID
                FROM WC_ESSENTIAL_TRIAL_F ETF
                WHERE
                                                                    (CASE WHEN ETF.BUY_FROM_TRIAL_ASSET_ID IS NOT NULL THEN 'Y' ELSE 'N' END) = 'N'
                                                                                AND ETF.ACC_INTEGRATION_ID NOT IN (
                                                                                    SELECT DISTINCT ETF.ACC_INTEGRATION_ID
                                                                                                FROM WC_ESSENTIAL_TRIAL_F ETF
                                                                                                WHERE (CASE WHEN ETF.BUY_FROM_TRIAL_ASSET_ID IS NOT NULL THEN 'Y' ELSE 'N' END) = 'Y'
                                                                                )
                                                                                AND ETF.AST_REGISTERED_DT BETWEEN @date_from AND @date_to
                                    ) A ON A.ACC_INTEGRATION_ID = ETF.ACC_INTEGRATION_ID
                                                
                                  /*TO retrieve Account Main Email  */
          LEFT OUTER JOIN W_ORG_D ACC ON ACC.X_CUSTOMER_ID = ETF.ACC_INTEGRATION_ID
                                                
                                WHERE
                                    ETF.AST_REGISTERED_DT BETWEEN @date_from AND @date_to
    )C
       LEFT OUTER JOIN W_ORG_D ACC ON C.ACC_INTEGRATION_ID = ACC.X_CUSTOMER_ID 
       LEFT OUTER JOIN W_ORDER_D ORDER1 ON ORDER1.ORDER_NUM = C.BUY_FROM_TRIAL_ORDER_NUM 
WHERE
    C.ROW_NUM = 1
                AND ((C.ACCOUNT_MAIN_EMAIL NOT LIKE '%demo.business%'
    AND C.ACCOUNT_MAIN_EMAIL NOT LIKE '%demo.nusiness%')
    OR  C.ACCOUNT_MAIN_EMAIL IS NULL)
) ESSENTIALS_QUERY
) OUTER_QUERY
WHERE OUTER_QUERY.CONVERTED = 'Y'
AND TEST_DRIVE_SERIAL = '615508902318'
ORDER BY OUTER_QUERY.TEST_DRIVE_REG_DT DESC
